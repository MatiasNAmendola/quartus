#include "include/idt.hpp"

using namespace hal::x86;

extern "C"
{
	void intr_0();								
	void intr_1();
	void intr_2();
	void intr_3();
	void intr_4();
	void intr_5();
	void intr_6();
	void intr_7();
	void intr_8();
	void intr_9();
	void intr_10();
	void intr_11();
	void intr_12();
	void intr_13();
	void intr_14();
	void intr_15();
	void intr_16();
	void intr_17();
	void intr_18();
	void intr_19();
	void intr_20();
	void intr_21();
	void intr_22();
	void intr_23();
	void intr_24();
	void intr_25();
	void intr_26();
	void intr_27();
	void intr_28();
	void intr_29();
	void intr_30();
	void intr_31();
	void intr_32();
	void intr_33();
	void intr_34();
	void intr_35();
	void intr_36();
	void intr_37();
	void intr_38();
	void intr_39();
	void intr_40();
	void intr_41();
	void intr_42();
	void intr_43();
	void intr_44();
	void intr_45();
	void intr_46();
	void intr_47();
	void intr_48();
	void intr_49();
	void intr_50();
	void intr_51();
	void intr_52();
	void intr_53();
	void intr_54();
	void intr_55();
	void intr_56();
	void intr_57();
	void intr_58();
	void intr_59();
	void intr_60();
	void intr_61();
	void intr_62();
	void intr_63();
	void intr_64();
	void intr_65();
	void intr_66();
	void intr_67();
	void intr_68();
	void intr_69();
	void intr_70();
	void intr_71();
	void intr_72();
	void intr_73();
	void intr_74();
	void intr_75();
	void intr_76();
	void intr_77();
	void intr_78();
	void intr_79();
	void intr_80();
	void intr_81();
	void intr_82();
	void intr_83();
	void intr_84();
	void intr_85();
	void intr_86();
	void intr_87();
	void intr_89();
	void intr_90();
	void intr_91();
	void intr_92();
	void intr_93();
	void intr_94();
	void intr_95();
	void intr_96();
	void intr_97();
	void intr_98();
	void intr_99();
	void intr_100();
	void intr_101();
	void intr_102();
	void intr_103();
	void intr_104();
	void intr_105();
	void intr_106();
	void intr_107();
	void intr_108();
	void intr_109();
	void intr_110();
	void intr_111();
	void intr_112();
	void intr_113();
	void intr_114();
	void intr_115();
	void intr_116();
	void intr_117();
	void intr_118();
	void intr_119();
	void intr_120();
	void intr_121();
	void intr_122();
	void intr_123();
	void intr_124();
	void intr_125();
	void intr_126();
	void intr_127();
	void intr_128();
	void intr_129();
	void intr_130();
	void intr_131();
	void intr_132();
	void intr_133();
	void intr_134();
	void intr_135();
	void intr_136();
	void intr_137();
	void intr_138();
	void intr_139();
	void intr_140();
	void intr_141();
	void intr_142();
	void intr_143();
	void intr_144();
	void intr_145();
	void intr_146();
	void intr_147();
	void intr_148();
	void intr_149();
	void intr_150();
	void intr_151();
	void intr_152();
	void intr_153();
	void intr_154();
	void intr_155();
	void intr_156();
	void intr_157();
	void intr_158();
	void intr_159();
	void intr_160();
	void intr_161();
	void intr_162();
	void intr_163();
	void intr_164();
	void intr_165();
	void intr_166();
	void intr_167();
	void intr_168();
	void intr_169();
	void intr_170();
	void intr_171();
	void intr_172();
	void intr_173();
	void intr_174();
	void intr_175();
	void intr_176();
	void intr_177();
	void intr_178();
	void intr_179();
	void intr_180();
	void intr_181();
	void intr_182();
	void intr_183();
	void intr_184();
	void intr_185();
	void intr_186();
	void intr_187();
	void intr_188();
	void intr_189();
	void intr_190();
	void intr_191();
	void intr_192();
	void intr_193();
	void intr_194();
	void intr_195();
	void intr_196();
	void intr_197();
	void intr_198();
	void intr_199();
	void intr_200();
	void intr_201();
	void intr_202();
	void intr_203();
	void intr_204();
	void intr_205();
	void intr_206();
	void intr_207();
	void intr_208();
	void intr_209();
	void intr_210();
	void intr_211();
	void intr_212();
	void intr_213();
	void intr_214();
	void intr_215();
	void intr_216();
	void intr_217();
	void intr_218();
	void intr_219();
	void intr_220();
	void intr_221();
	void intr_222();
	void intr_223();
	void intr_224();
	void intr_225();
	void intr_226();
	void intr_227();
	void intr_228();
	void intr_229();
	void intr_230();
	void intr_231();
	void intr_232();
	void intr_233();
	void intr_234();
	void intr_235();
	void intr_236();
	void intr_237();
	void intr_238();
	void intr_239();
	void intr_240();
	void intr_241();
	void intr_242();
	void intr_243();
	void intr_244();
	void intr_245();
	void intr_246();
	void intr_247();
	void intr_248();
	void intr_249();
	void intr_250();
	void intr_251();
	void intr_252();
	void intr_253();
	void intr_254();
	void intr_255();
}
/*
Constructor; initialises the IDT with 0
*/
idt::idt(  )
{
	for(size_t index = 0; index < idt::descriptor_count; index++)
	{
		idt::descriptor_table[index] = 0;
	}
}

/*
Destructor
*/
idt::~idt(  )
{

}

/*
Initialises the IDT;
*/
void idt::init(  )
{
	this->set_entry(0, intr_0, 0x8, 0x8e);					
	this->set_entry(1, intr_1, 0x8, 0x8e);
	this->set_entry(2, intr_2, 0x8, 0x8e);
	this->set_entry(3, intr_3, 0x8, 0x8e);
	this->set_entry(4, intr_4, 0x8, 0x8e);
	this->set_entry(5, intr_5, 0x8, 0x8e);
	this->set_entry(6, intr_6, 0x8, 0x8e);
	this->set_entry(7, intr_7, 0x8, 0x8e);
	this->set_entry(8, intr_8, 0x8, 0x8e);
	this->set_entry(9, intr_9, 0x8, 0x8e);
	this->set_entry(10, intr_10, 0x8, 0x8e);
	this->set_entry(11, intr_11, 0x8, 0x8e);
	this->set_entry(12, intr_12, 0x8, 0x8e);
	this->set_entry(13, intr_13, 0x8, 0x8e);
	this->set_entry(14, intr_14, 0x8, 0x8e);
	this->set_entry(15, intr_15, 0x8, 0x8e);
	this->set_entry(16, intr_16, 0x8, 0x8e);
	this->set_entry(17, intr_17, 0x8, 0x8e);
	this->set_entry(18, intr_18, 0x8, 0x8e);
	this->set_entry(19, intr_19, 0x8, 0x8e);
	this->set_entry(20, intr_20, 0x8, 0x8e);
	this->set_entry(21, intr_21, 0x8, 0x8e);
	this->set_entry(22, intr_22, 0x8, 0x8e);
	this->set_entry(23, intr_23, 0x8, 0x8e);
	this->set_entry(24, intr_24, 0x8, 0x8e);
	this->set_entry(25, intr_25, 0x8, 0x8e);
	this->set_entry(26, intr_26, 0x8, 0x8e);
	this->set_entry(27, intr_27, 0x8, 0x8e);
	this->set_entry(28, intr_28, 0x8, 0x8e);
	this->set_entry(29, intr_29, 0x8, 0x8e);
	this->set_entry(30, intr_30, 0x8, 0x8e);
	this->set_entry(31, intr_31, 0x8, 0x8e);

	this->set_entry(32, intr_32, 0x8, 0x8e);
	this->set_entry(33, intr_33, 0x8, 0x8e);
	this->set_entry(34, intr_34, 0x8, 0x8e);
	this->set_entry(35, intr_35, 0x8, 0x8e);
	this->set_entry(36, intr_36, 0x8, 0x8e);
	this->set_entry(37, intr_37, 0x8, 0x8e);
	this->set_entry(38, intr_38, 0x8, 0x8e);
	this->set_entry(39, intr_39, 0x8, 0x8e);
	this->set_entry(40, intr_40, 0x8, 0x8e);
	this->set_entry(41, intr_41, 0x8, 0x8e);
	this->set_entry(42, intr_42, 0x8, 0x8e);
	this->set_entry(43, intr_43, 0x8, 0x8e);
	this->set_entry(44, intr_44, 0x8, 0x8e);
	this->set_entry(45, intr_45, 0x8, 0x8e);
	this->set_entry(46, intr_46, 0x8, 0x8e);
	this->set_entry(47, intr_47, 0x8, 0x8e);

	this->set_entry(48, intr_48, 0x8, 0x8e);
	this->set_entry(49, intr_49, 0x8, 0x8e);
	this->set_entry(50, intr_50, 0x8, 0x8e);
	this->set_entry(51, intr_51, 0x8, 0x8e);
	this->set_entry(52, intr_52, 0x8, 0x8e);
	this->set_entry(53, intr_53, 0x8, 0x8e);
	this->set_entry(54, intr_54, 0x8, 0x8e);
	this->set_entry(55, intr_55, 0x8, 0x8e);
	this->set_entry(56, intr_56, 0x8, 0x8e);
	this->set_entry(57, intr_57, 0x8, 0x8e);
	this->set_entry(58, intr_58, 0x8, 0x8e);
	this->set_entry(59, intr_59, 0x8, 0x8e);
	this->set_entry(60, intr_60, 0x8, 0x8e);
	this->set_entry(61, intr_61, 0x8, 0x8e);
	this->set_entry(62, intr_62, 0x8, 0x8e);
	this->set_entry(63, intr_63, 0x8, 0x8e);
	this->set_entry(64, intr_64, 0x8, 0x8e);
	this->set_entry(65, intr_65, 0x8, 0x8e);
	this->set_entry(66, intr_66, 0x8, 0x8e);
	this->set_entry(67, intr_67, 0x8, 0x8e);
	this->set_entry(68, intr_68, 0x8, 0x8e);
	this->set_entry(69, intr_69, 0x8, 0x8e);
	this->set_entry(70, intr_70, 0x8, 0x8e);
	this->set_entry(71, intr_71, 0x8, 0x8e);
	this->set_entry(72, intr_72, 0x8, 0x8e);
	this->set_entry(73, intr_73, 0x8, 0x8e);
	this->set_entry(74, intr_74, 0x8, 0x8e);
	this->set_entry(75, intr_75, 0x8, 0x8e);
	this->set_entry(76, intr_76, 0x8, 0x8e);
	this->set_entry(77, intr_77, 0x8, 0x8e);
	this->set_entry(78, intr_78, 0x8, 0x8e);
	this->set_entry(79, intr_79, 0x8, 0x8e);
	this->set_entry(80, intr_80, 0x8, 0x8e);
	this->set_entry(81, intr_81, 0x8, 0x8e);
	this->set_entry(82, intr_82, 0x8, 0x8e);
	this->set_entry(83, intr_83, 0x8, 0x8e);
	this->set_entry(84, intr_84, 0x8, 0x8e);
	this->set_entry(85, intr_85, 0x8, 0x8e);
	this->set_entry(86, intr_86, 0x8, 0x8e);
	this->set_entry(87, intr_87, 0x8, 0x8e);
	this->set_entry(89, intr_89, 0x8, 0x8e);
	this->set_entry(90, intr_90, 0x8, 0x8e);
	this->set_entry(91, intr_91, 0x8, 0x8e);
	this->set_entry(92, intr_92, 0x8, 0x8e);
	this->set_entry(93, intr_93, 0x8, 0x8e);
	this->set_entry(94, intr_94, 0x8, 0x8e);
	this->set_entry(95, intr_95, 0x8, 0x8e);
	this->set_entry(96, intr_96, 0x8, 0x8e);
	this->set_entry(97, intr_97, 0x8, 0x8e);
	this->set_entry(98, intr_98, 0x8, 0x8e);
	this->set_entry(99, intr_99, 0x8, 0x8e);
	this->set_entry(100, intr_100, 0x8, 0x8e);
	this->set_entry(101, intr_101, 0x8, 0x8e);
	this->set_entry(102, intr_102, 0x8, 0x8e);
	this->set_entry(103, intr_103, 0x8, 0x8e);
	this->set_entry(104, intr_104, 0x8, 0x8e);
	this->set_entry(105, intr_105, 0x8, 0x8e);
	this->set_entry(106, intr_106, 0x8, 0x8e);
	this->set_entry(107, intr_107, 0x8, 0x8e);
	this->set_entry(108, intr_108, 0x8, 0x8e);
	this->set_entry(109, intr_109, 0x8, 0x8e);
	this->set_entry(110, intr_110, 0x8, 0x8e);
	this->set_entry(111, intr_111, 0x8, 0x8e);
	this->set_entry(112, intr_112, 0x8, 0x8e);
	this->set_entry(113, intr_113, 0x8, 0x8e);
	this->set_entry(114, intr_114, 0x8, 0x8e);
	this->set_entry(115, intr_115, 0x8, 0x8e);
	this->set_entry(116, intr_116, 0x8, 0x8e);
	this->set_entry(117, intr_117, 0x8, 0x8e);
	this->set_entry(118, intr_118, 0x8, 0x8e);
	this->set_entry(119, intr_119, 0x8, 0x8e);
	this->set_entry(120, intr_120, 0x8, 0x8e);
	this->set_entry(121, intr_121, 0x8, 0x8e);
	this->set_entry(122, intr_122, 0x8, 0x8e);
	this->set_entry(123, intr_123, 0x8, 0x8e);
	this->set_entry(124, intr_124, 0x8, 0x8e);
	this->set_entry(125, intr_125, 0x8, 0x8e);
	this->set_entry(126, intr_126, 0x8, 0x8e);
	this->set_entry(127, intr_127, 0x8, 0x8e);
	this->set_entry(128, intr_128, 0x8, 0x8e);
	this->set_entry(129, intr_129, 0x8, 0x8e);
	this->set_entry(130, intr_130, 0x8, 0x8e);
	this->set_entry(131, intr_131, 0x8, 0x8e);
	this->set_entry(132, intr_132, 0x8, 0x8e);
	this->set_entry(133, intr_133, 0x8, 0x8e);
	this->set_entry(134, intr_134, 0x8, 0x8e);
	this->set_entry(135, intr_135, 0x8, 0x8e);
	this->set_entry(136, intr_136, 0x8, 0x8e);
	this->set_entry(137, intr_137, 0x8, 0x8e);
	this->set_entry(138, intr_138, 0x8, 0x8e);
	this->set_entry(139, intr_139, 0x8, 0x8e);
	this->set_entry(140, intr_140, 0x8, 0x8e);
	this->set_entry(141, intr_141, 0x8, 0x8e);
	this->set_entry(142, intr_142, 0x8, 0x8e);
	this->set_entry(143, intr_143, 0x8, 0x8e);
	this->set_entry(144, intr_144, 0x8, 0x8e);
	this->set_entry(145, intr_145, 0x8, 0x8e);
	this->set_entry(146, intr_146, 0x8, 0x8e);
	this->set_entry(147, intr_147, 0x8, 0x8e);
	this->set_entry(148, intr_148, 0x8, 0x8e);
	this->set_entry(149, intr_149, 0x8, 0x8e);
	this->set_entry(150, intr_150, 0x8, 0x8e);
	this->set_entry(151, intr_151, 0x8, 0x8e);
	this->set_entry(152, intr_152, 0x8, 0x8e);
	this->set_entry(153, intr_153, 0x8, 0x8e);
	this->set_entry(154, intr_154, 0x8, 0x8e);
	this->set_entry(155, intr_155, 0x8, 0x8e);
	this->set_entry(156, intr_156, 0x8, 0x8e);
	this->set_entry(157, intr_157, 0x8, 0x8e);
	this->set_entry(158, intr_158, 0x8, 0x8e);
	this->set_entry(159, intr_159, 0x8, 0x8e);
	this->set_entry(160, intr_160, 0x8, 0x8e);
	this->set_entry(161, intr_161, 0x8, 0x8e);
	this->set_entry(162, intr_162, 0x8, 0x8e);
	this->set_entry(163, intr_163, 0x8, 0x8e);
	this->set_entry(164, intr_164, 0x8, 0x8e);
	this->set_entry(165, intr_165, 0x8, 0x8e);
	this->set_entry(166, intr_166, 0x8, 0x8e);
	this->set_entry(167, intr_167, 0x8, 0x8e);
	this->set_entry(168, intr_168, 0x8, 0x8e);
	this->set_entry(169, intr_169, 0x8, 0x8e);
	this->set_entry(170, intr_170, 0x8, 0xee);
	this->set_entry(171, intr_171, 0x8, 0x8e);
	this->set_entry(172, intr_172, 0x8, 0x8e);
	this->set_entry(173, intr_173, 0x8, 0x8e);
	this->set_entry(174, intr_174, 0x8, 0x8e);
	this->set_entry(175, intr_175, 0x8, 0x8e);
	this->set_entry(176, intr_176, 0x8, 0x8e);
	this->set_entry(177, intr_177, 0x8, 0x8e);
	this->set_entry(178, intr_178, 0x8, 0x8e);
	this->set_entry(179, intr_179, 0x8, 0x8e);
	this->set_entry(180, intr_180, 0x8, 0x8e);
	this->set_entry(181, intr_181, 0x8, 0x8e);
	this->set_entry(182, intr_182, 0x8, 0x8e);
	this->set_entry(183, intr_183, 0x8, 0x8e);
	this->set_entry(184, intr_184, 0x8, 0x8e);
	this->set_entry(185, intr_185, 0x8, 0x8e);
	this->set_entry(186, intr_186, 0x8, 0x8e);
	this->set_entry(187, intr_187, 0x8, 0x8e);
	this->set_entry(188, intr_188, 0x8, 0x8e);
	this->set_entry(189, intr_189, 0x8, 0x8e);
	this->set_entry(190, intr_190, 0x8, 0x8e);
	this->set_entry(191, intr_191, 0x8, 0x8e);
	this->set_entry(192, intr_192, 0x8, 0x8e);
	this->set_entry(193, intr_193, 0x8, 0x8e);
	this->set_entry(194, intr_194, 0x8, 0x8e);
	this->set_entry(195, intr_195, 0x8, 0x8e);
	this->set_entry(196, intr_196, 0x8, 0x8e);
	this->set_entry(197, intr_197, 0x8, 0x8e);
	this->set_entry(198, intr_198, 0x8, 0x8e);
	this->set_entry(199, intr_199, 0x8, 0x8e);
	this->set_entry(200, intr_200, 0x8, 0x8e);
	this->set_entry(201, intr_201, 0x8, 0x8e);
	this->set_entry(202, intr_202, 0x8, 0x8e);
	this->set_entry(203, intr_203, 0x8, 0x8e);
	this->set_entry(204, intr_204, 0x8, 0x8e);
	this->set_entry(205, intr_205, 0x8, 0x8e);
	this->set_entry(206, intr_206, 0x8, 0x8e);
	this->set_entry(207, intr_207, 0x8, 0x8e);
	this->set_entry(208, intr_208, 0x8, 0x8e);
	this->set_entry(209, intr_209, 0x8, 0x8e);
	this->set_entry(210, intr_210, 0x8, 0x8e);
	this->set_entry(211, intr_211, 0x8, 0x8e);
	this->set_entry(212, intr_212, 0x8, 0x8e);
	this->set_entry(213, intr_213, 0x8, 0x8e);
	this->set_entry(214, intr_214, 0x8, 0x8e);
	this->set_entry(215, intr_215, 0x8, 0x8e);
	this->set_entry(216, intr_216, 0x8, 0x8e);
	this->set_entry(217, intr_217, 0x8, 0x8e);
	this->set_entry(218, intr_218, 0x8, 0x8e);
	this->set_entry(219, intr_219, 0x8, 0x8e);
	this->set_entry(220, intr_220, 0x8, 0x8e);
	this->set_entry(221, intr_221, 0x8, 0x8e);
	this->set_entry(222, intr_222, 0x8, 0x8e);
	this->set_entry(223, intr_223, 0x8, 0x8e);
	this->set_entry(224, intr_224, 0x8, 0x8e);
	this->set_entry(225, intr_225, 0x8, 0x8e);
	this->set_entry(226, intr_226, 0x8, 0x8e);
	this->set_entry(227, intr_227, 0x8, 0x8e);
	this->set_entry(228, intr_228, 0x8, 0x8e);
	this->set_entry(229, intr_229, 0x8, 0x8e);
	this->set_entry(230, intr_230, 0x8, 0x8e);
	this->set_entry(231, intr_231, 0x8, 0x8e);
	this->set_entry(232, intr_232, 0x8, 0x8e);
	this->set_entry(233, intr_233, 0x8, 0x8e);
	this->set_entry(234, intr_234, 0x8, 0x8e);
	this->set_entry(235, intr_235, 0x8, 0x8e);
	this->set_entry(236, intr_236, 0x8, 0x8e);
	this->set_entry(237, intr_237, 0x8, 0x8e);

	this->set_entry(238, intr_238, 0x8, 0xee);

	this->set_entry(239, intr_239, 0x8, 0x8e);
	this->set_entry(240, intr_240, 0x8, 0x8e);
	this->set_entry(241, intr_241, 0x8, 0x8e);
	this->set_entry(242, intr_242, 0x8, 0x8e);
	this->set_entry(243, intr_243, 0x8, 0x8e);
	this->set_entry(244, intr_244, 0x8, 0x8e);
	this->set_entry(245, intr_245, 0x8, 0x8e);
	this->set_entry(246, intr_246, 0x8, 0x8e);
	this->set_entry(247, intr_247, 0x8, 0x8e);
	this->set_entry(248, intr_248, 0x8, 0x8e);
	this->set_entry(249, intr_249, 0x8, 0x8e);
	this->set_entry(250, intr_250, 0x8, 0x8e);
	this->set_entry(251, intr_251, 0x8, 0x8e);
	this->set_entry(252, intr_252, 0x8, 0x8e);
	this->set_entry(253, intr_253, 0x8, 0x8e);
	this->set_entry(254, intr_254, 0x8, 0x8e);

	this->set_entry(255, intr_255, 0x8, 0xee);
}

/*
Loads th IDT
*/
void idt::load(  )
{
	struct 
	{
    		uint16_t limit;
    		void 	 *pointer;
	} PACKED idtp;

	idtp.limit 	= idt::descriptor_count * 8 - 1;
    	idtp.pointer 	= idt::descriptor_table;

	asm volatile("lidt %0" : : "m" (idtp));	
}

/*
Sets an IDT-entry
*/

void idt::set_entry( size_t index, void (*fn)(), uint32_t selector, uint32_t flags )
{
	uintptr_t handler = (uintptr_t)fn;

	idt::descriptor_table[index] = handler & 0xffffLL;
	idt::descriptor_table[index] |= (selector & 0xffffL) << 16;
	idt::descriptor_table[index] |= (flags & 0xffLL) << 40;
	idt::descriptor_table[index] |= ( (handler >> 16) & 0xffffLL ) << 48;
}
